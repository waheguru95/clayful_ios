// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios10.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name ZendeskSDKMessaging
import CommonCrypto
import CoreImage
import CoreServices
import Foundation
import MobileCoreServices
import PhotosUI
import Swift
import UIKit.UIImage
import UIKit
import UniformTypeIdentifiers
import ZendeskSDK
import ZendeskSDKConversationKit
import ZendeskSDKLogger
@_exported import ZendeskSDKMessaging
import ZendeskSDKStorage
import ZendeskSDKUIComponents
import _Concurrency
import os
extension UIKit.UIImageView {
  @_Concurrency.MainActor(unsafe) @objc dynamic open func nuke_display(image: UIKit.UIImage?)
}
@objc(ZDKPushResponsibility) public enum PushResponsibility : Swift.Int {
  case messagingShouldDisplay
  case messagingShouldNotDisplay
  case notFromMessaging
  public init?(rawValue: Swift.Int)
  public typealias RawValue = Swift.Int
  public var rawValue: Swift.Int {
    get
  }
}
@_hasMissingDesignatedInitializers @objc(ZDKPushNotifications) final public class PushNotifications : ObjectiveC.NSObject {
  @objc public static func updatePushNotificationToken(_ token: Foundation.Data)
  @objc public static func shouldBeDisplayed(_ userInfo: [Swift.AnyHashable : Any]) -> ZendeskSDKMessaging.PushResponsibility
  @objc public static func handleTap(_ userInfo: [Swift.AnyHashable : Any], completion: ((UIKit.UIViewController?) -> Swift.Void)?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objc(ZDKDefaultMessagingFactory) final public class DefaultMessagingFactory : ObjectiveC.NSObject, ZendeskSDK.MessagingFactory {
  @objc final public func createMessaging(with parameters: ZendeskSDK.MessagingFactoryParameters) -> ZendeskSDK.Messaging
  @objc override dynamic public init()
  @objc deinit
}
extension CoreGraphics.CGSize : Swift.Hashable {
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
extension ZendeskSDKMessaging.PushResponsibility : Swift.Equatable {}
extension ZendeskSDKMessaging.PushResponsibility : Swift.Hashable {}
extension ZendeskSDKMessaging.PushResponsibility : Swift.RawRepresentable {}
